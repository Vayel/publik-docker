#!/bin/bash

COMBO_OK="Combo fonctionne"
AUTHENTIC_OK="Connexion"

function retry() {
  local -r -i max_attempts="$1"; shift
  local -r cmd="$@"
  local -i attempt_num=1

  until $cmd
  do
    if (( attempt_num == max_attempts ))
    then
      echo "Component not ready and there are no more attempts left!"
      exit 1
    else
      echo "Component not ready yet. Trying again in 10 seconds..."
      let attempt_num++
	    sleep 10
    fi
  done
}

function testHttpCode {
  t=`wget --spider --max-redirect 0 -S https://$1 2>&1 | grep "HTTP/" | awk '{print $2}'`
  if [ "$t" != "$3" ]
  then
    echo "ERROR: $2 returned http code $t instead of expected $3"
    return 1
  fi
  echo "OK: $2 returned the expected $3 http code"
}

function testHttpContains {
  t=`wget -O - https://$1 2>&1 | grep $3 | wc -l`
  if [ $t -eq 0 ]
  then
    echo "ERROR: $2 html does not contain $3"
    return 1
  fi
  echo "OK: $2 returned a html containing $3"
}

# Before cook, wait for all services to be ready
echo "###"
echo "### Checking components..."
echo "###"
retry 300 testHttpCode ${COMBO_SUBDOMAIN}${ENV}.${DOMAIN}:${HTTPS_PORT} combo 404
retry 300 testHttpCode ${COMBO_ADMIN_SUBDOMAIN}${ENV}.${DOMAIN}:${HTTPS_PORT} combo_agent 404
retry 300 testHttpCode ${PASSERELLE_SUBDOMAIN}${ENV}.${DOMAIN}:${HTTPS_PORT} passerelle 404
retry 300 testHttpCode ${WCS_SUBDOMAIN}${ENV}.${DOMAIN}:${HTTPS_PORT} wcs 404
retry 300 testHttpCode ${AUTHENTIC_SUBDOMAIN}${ENV}.${DOMAIN}:${HTTPS_PORT} authentic 404
retry 300 testHttpCode ${FARGO_SUBDOMAIN}${ENV}.${DOMAIN}:${HTTPS_PORT} fargo 404
retry 300 testHttpCode ${HOBO_SUBDOMAIN}${ENV}.${DOMAIN}:${HTTPS_PORT} hobo 404

# ZIP template for WCS
echo "###"
echo "### Building WCS template..."
echo "###"
zip -j /var/lib/wcs/skeletons/publik.zip /tmp/wcs-template/*

# Execute cook in hobo (Many time as recommended by Entr'ouvert)
echo "###"
echo "### Deploying components..."
echo "###"
runuser -l hobo -c 'cd /tmp && hobo-manage cook /tmp/recipe.json -v 2'
runuser -l hobo -c 'cd /tmp && hobo-manage cook /tmp/recipe.json -v 2'
runuser -l hobo -c 'cd /tmp && hobo-manage cook /tmp/recipe.json -v 2'
runuser -l hobo -c 'cd /tmp && hobo-manage cook /tmp/recipe.json -v 2'
runuser -l hobo -c 'cd /tmp && hobo-manage cook /tmp/recipe.json -v 2'

# After cook, test all services
set -e
echo "###"
echo "### Checking deployment..."
echo "###"
testHttpContains ${COMBO_SUBDOMAIN}${ENV}.${DOMAIN}:${HTTPS_PORT} combo $COMBO_OK
testHttpContains ${COMBO_ADMIN_SUBDOMAIN}${ENV}.${DOMAIN}:${HTTPS_PORT} combo_agent $COMBO_OK
testHttpContains ${PASSERELLE_SUBDOMAIN}${ENV}.${DOMAIN}:${HTTPS_PORT} passerelle $AUTHENTIC_OK
testHttpContains ${WCS_SUBDOMAIN}${ENV}.${DOMAIN}:${HTTPS_PORT} wcs $AUTHENTIC_OK
testHttpContains ${AUTHENTIC_SUBDOMAIN}${ENV}.${DOMAIN}:${HTTPS_PORT} authentic $COMBO_OK
testHttpContains ${FARGO_SUBDOMAIN}${ENV}.${DOMAIN}:${HTTPS_PORT} fargo $AUTHENTIC_OK
testHttpContains ${HOBO_SUBDOMAIN}${ENV}.${DOMAIN}:${HTTPS_PORT} hobo $AUTHENTIC_OK

testHttpCode ${COMBO_SUBDOMAIN}${ENV}.${DOMAIN}:${HTTPS_PORT} combo 200
testHttpCode ${COMBO_ADMIN_SUBDOMAIN}${ENV}.${DOMAIN}:${HTTPS_PORT} combo_agent 200
testHttpCode ${PASSERELLE_SUBDOMAIN}${ENV}.${DOMAIN}:${HTTPS_PORT} passerelle 302
testHttpCode ${WCS_SUBDOMAIN}${ENV}.${DOMAIN}:${HTTPS_PORT} wcs 302
testHttpCode ${AUTHENTIC_SUBDOMAIN}${ENV}.${DOMAIN}:${HTTPS_PORT} authentic 302
testHttpCode ${FARGO_SUBDOMAIN}${ENV}.${DOMAIN}:${HTTPS_PORT} fargo 302
testHttpCode ${HOBO_SUBDOMAIN}${ENV}.${DOMAIN}:${HTTPS_PORT} hobo 302

echo "###"
echo "### Importing site data..."
echo "###"
import-site.sh

echo "###"
echo "### Configuration OK (Hobo cook)"
echo "###"
