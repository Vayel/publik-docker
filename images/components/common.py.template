# To pass env vars to Python scripts run by Publik in services which remove custom env vars:
# https://unix.stackexchange.com/questions/44370/how-to-make-unix-service-see-environment-variables
# So we hardcode the values when the container starts

# TODO: escape quotes

SECRET_KEY = '$SECRET_KEY'
DEBUG = bool('$DEBUG')
LOG_LEVEL = '$LOG_LEVEL'

ALLOWED_HOSTS = '$ALLOWED_HOSTS'
if ALLOWED_HOSTS:
    ALLOWED_HOSTS = ALLOWED_HOSTS.split(';')
else:
    ALLOWED_HOSTS = []

DB_HOST = '$DB_HOST'
DB_PORT = '$DB_PORT'  # Must be a string: https://docs.djangoproject.com/en/1.11/ref/settings/#std:setting-DATABASES
PASS_DB_HOBO = '$PASS_DB_HOBO'
PASS_DB_PASSERELLE = '$PASS_DB_PASSERELLE'
PASS_DB_COMBO = '$PASS_DB_COMBO'
PASS_DB_CHRONO = '$PASS_DB_CHRONO'
PASS_DB_FARGO = '$PASS_DB_FARGO'
PASS_DB_WCS = '$PASS_DB_WCS'
PASS_DB_AUTHENTIC = '$PASS_DB_AUTHENTIC'

DATABASES = {
    'default': {
        'ENGINE': 'tenant_schemas.postgresql_backend',
        'HOST': DB_HOST,
        'PORT': DB_PORT,
    }
}

RABBITMQ_USER = '$RABBITMQ_USER'
PASS_RABBITMQ = '$PASS_RABBITMQ'
RABBITMQ_HOST = '$RABBITMQ_HOST'
RABBITMQ_PORT = $RABBITMQ_PORT

ADMIN_MAIL_AUTHOR = '$ADMIN_MAIL_AUTHOR'
ADMIN_MAIL_ADDR = '$ADMIN_MAIL_ADDR'

# Email configuration
ADMINS = (
    (ADMIN_MAIL_AUTHOR, ADMIN_MAIL_ADDR),
)
SERVER_EMAIL = ADMIN_MAIL_ADDR
DEFAULT_FROM_EMAIL = ADMIN_MAIL_ADDR

# SMTP configuration
EMAIL_HOST = '$SMTP_HOST'
EMAIL_HOST_USER = '$SMTP_USER'
EMAIL_HOST_PASSWORD = '$PASS_SMTP'
EMAIL_PORT = $SMTP_PORT

# Logs are saved by service in /var/log/uwsgi.XXX.log
try:
    LOGGING
except NameError:
    LOGGING = {}

LOGGING['version'] = LOGGING.get('version', 1)
for k in ['filters', 'formatters', 'handlers', 'loggers']:
  LOGGING[k] = LOGGING.get(k, {})

LOGGING['formatters']['simple'] = {
    'format': '[%(asctime)s][%(levelname)s] %(name)s ([%(filename)s:%(lineno)s - %(funcName)20s()) %(message)s',
    'datefmt': '%d/%b/%Y %H:%M:%S'
}
LOGGING['handlers']['console'] = {
    'class': 'logging.StreamHandler',
    'formatter': 'simple',
}
LOGGING['handlers']['mail_admins'] = {
    'level': 'ERROR',
    'class': 'django.utils.log.AdminEmailHandler',
    'formatter': 'simple',
    'include_html': True,
}
LOGGING['loggers'][''] = {
    'handlers': ['console', 'mail_admins'],
    'level': LOG_LEVEL,
    'disabled': False
}

# RabbitMQ
BROKER_URL = 'amqp://{user}:{password}@{host}:{port}//'.format(
    user=RABBITMQ_USER,
    password=PASS_RABBITMQ,
    host=RABBITMQ_HOST,
    port=RABBITMQ_PORT,
)
BROKER_TASK_EXPIRES = $HOBO_DEPLOY_TIMEOUT
