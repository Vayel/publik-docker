version: "2"

services:
  proxy:
    container_name: proxy
    build:
      context: ./proxy
    image: publik-proxy
    tty: true
    ports:
      - "${HTTP_PORT}:80"
      - "${HTTPS_PORT}:443"
    volumes:
      - ./data/ssl:/etc/nginx/ssl
      - ./data/letsencrypt:/etc/letsencrypt
      - ./data/hosts:/etc/hosts
    links:
      - components:authentic
      - components:combo
      - components:fargo
      - components:hobo
      - components:passerelle
      - components:wcs
      - rabbitmq:rabbitmq
    env_file:
      - .env
      - config.env
      - secret.env
  
  components:
    container_name: components
    build:
      context: ./components
    image: publik-components
    command: /bin/bash
    volumes:
      - authentic2data:/var/lib/authentic2-multitenant/tenants
      - combodata:/var/lib/combo/tenants
      - fargodata:/var/lib/fargo/tenants
      - hobodata:/var/lib/hobo/tenants
      - passerelledata:/var/lib/passerelle/tenants
      - wcsdata:/var/lib/wcs
      - ./data/hosts:/etc/hosts
    links:
      - db:db
      - rabbitmq:rabbitmq
    depends_on: 
      - db
      - rabbitmq
    tty: true
    env_file:
      - .env
      - config.env
      - secret.env

  db:
    container_name: db
    build:
      context: ./postgresql
    image: publik-pgsql
    ports:
      - "${DB_PORT}:5432"
    env_file:
      - secret.env
    volumes:
      - dbdata:/var/lib/postgresql/data
      - ./postgresql/docker-entrypoint-initdb.d/:/docker-entrypoint-initdb.d

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management
    mem_limit: 256M
    hostname: rabbitmq
    ports:
      - "${RABBITMQ_PORT}:5672"
    env_file:
      - .env
      - secret.env
      - config.env

volumes:
  dbdata:
  authentic2data:
  combodata:
  fargodata:
  hobodata:
  passerelledata:
  wcsdata:
